import{_ as o,o as e,c as t,Q as l}from"./chunks/framework.34a9ea84.js";const h=JSON.parse('{"title":"js数组常用方法大全","description":"","frontmatter":{},"headers":[],"relativePath":"blogs/skills/arrApi.md","filePath":"blogs/skills/arrApi.md","lastUpdated":null}'),u={name:"blogs/skills/arrApi.md"},r=l('<h1 id="js数组常用方法大全" tabindex="-1">js数组常用方法大全 <a class="header-anchor" href="#js数组常用方法大全" aria-label="Permalink to &quot;js数组常用方法大全&quot;">​</a></h1><p>一、增删改方法 增删改查四大天王是数组中最常见也是最简单的方法，需要留意的是哪些方法会对原数组产生影响，哪些方法不会,查找方法较多，单独说明 下面前五种增删方法都对原数组产生影响</p><p>push() unshift() pop() shift() splice()</p><p>push() push()方法接收任意数量的参数，并将它们添加到数组末尾，返回数组的最新长度 javascript复制代码let colors = [&quot;red&quot;]; // 创建一个数组 let count = colors.push(&quot;green&quot;,&quot;blue&quot;); // 推入两项 console.log(count) // 3 console.log(colors) // [&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;]</p><p>unshift() unshift()在数组开头添加任意多个值，然后返回新的数组长度 javascript复制代码let colors = [&quot;red&quot;]; // 创建一个数组 let count = colors.unshift(&quot;green&quot;,&quot;blue&quot;); // 从数组开头推入两项 console.log(count) // 3 console.log(colors) // [&quot;green&quot;,&quot;blue&quot;,&quot;red&quot;]</p><p>pop() pop() 方法用于删除数组的最后一项，同时减少数组的 length 值，返回被删除的项 javascript复制代码let colors = [&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;] let item = colors.pop(); // 取得最后一项 console.log(item) // blue console.log(colors) // [&quot;red&quot;,&quot;green&quot;]</p><p>shift() shift()方法用于删除数组的第一项，同时减少数组的 length 值，返回被删除的项 javascript复制代码let colors = [&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;] let item = colors.shift(); // 取得第一项 console.log(item) // red console.log(colors) // [&quot;green&quot;,&quot;blue&quot;]</p><p>splice() splice功能强大，可以同时对数组进行增删改的操作 传入三个参数，分别是开始位置，要删除元素的数量，要插入的任意多个元素，返回删除元素的数组，对原数组产生影响 ini复制代码let colors = [&quot;red&quot;, &quot;green&quot;, &quot;blue&quot;]; let removed = colors.splice(1, 1, &quot;red&quot;, &quot;purple&quot;); // 插入两个值，删除一个元素 console.log(colors); // red,red,purple,blue console.log(removed); // green，只有一个元素的数组</p><p>删除：传入两个参数，分别是开始下标位置，删除元素的数量，返回包含删除元素的数组 ini复制代码let colors = [&quot;red&quot;, &quot;green&quot;, &quot;blue&quot;]; let removed = colors.splice(0,1); // 删除第一项 console.log(colors); // green,blue console.log(removed); // red，只有一个元素的数组</p><p>增加：传入三个参数，分别是开始位置、0（要删除的元素数量）、插入的元素，返回空数组 ini复制代码let colors = [&quot;red&quot;, &quot;green&quot;, &quot;blue&quot;]; let removed = colors.splice(1, 0, &quot;yellow&quot;, &quot;orange&quot;) console.log(colors) // red,yellow,orange,green,blue console.log(removed) // []</p><p>改：只需要在删除的位置添加元素即可 ini复制代码let colors = [&quot;red&quot;, &quot;green&quot;, &quot;blue&quot;]; let removed = colors.splice(1, 1, &quot;yellow&quot;) console.log(colors) // red,yellow,blue console.log(removed) // [&quot;green&quot;]</p><p>作者：我家小姨超级可爱 链接：<a href="https://juejin.cn/post/7289282433661042688" target="_blank" rel="noreferrer">https://juejin.cn/post/7289282433661042688</a> 来源：稀土掘金 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>',12),s=[r];function q(c,n,p,i,a,d){return e(),t("div",null,s)}const _=o(u,[["render",q]]);export{h as __pageData,_ as default};
